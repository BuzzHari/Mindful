name: Build and Deploy Flutter App to GitHub

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
      - run: flutter --version

      - name: Reconstruct Keystore File
        run: |
          echo ${{ secrets.KEYSTORE_BASE64 }} | base64 --decode > $HOME/keystore.jks
          echo "KEYSTORE_FILE=$HOME/keystore.jks" >> $GITHUB_ENV

      - name: Set up environment for signing
        run: |
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
          echo "STORE_PASSWORD=${{ secrets.STORE_PASSWORD }}" >> $GITHUB_ENV

      - name: Extract version from tag
        id: extract_version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update pubspec.yaml
        run: |
          cd $GITHUB_WORKSPACE
          sed -i "s/^version: .*/version: ${{ env.VERSION }}/" pubspec.yaml

      - name: Install dependencies
        run: flutter pub get

      - name: Build the Universal APK
        run: flutter build apk --release

      - name: Upload APK to Existing GitHub Release
        run: |
          RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/${GITHUB_REF#refs/tags/} | jq -r '.id')

          ENCODED_VERSION=$(echo -n "${{ env.VERSION }}" | jq -s -R -r @uri)

          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/zip" \
            --data-binary @"build/app/outputs/flutter-apk/app-release.apk" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${RELEASE_ID}/assets?name=Mindful_${ENCODED_VERSION}_Universal.apk"

      - name: Cleanup
        if: success()
        run: |
          echo "Cleaning up temporary files..."
          rm -rf build
          rm $HOME/keystore.jks
          echo "Cleanup complete."